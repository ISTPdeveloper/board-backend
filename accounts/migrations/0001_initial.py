# Generated by Django 4.0.5 on 2022-09-02 19:31

import accounts.models
import core.s3_options
import core.validations
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=20, unique=True, validators=[core.validations.username_validate], verbose_name='아이디')),
                ('password', models.CharField(max_length=255, validators=[core.validations.password_validate], verbose_name='비밀번호')),
                ('name', models.CharField(max_length=4, validators=[core.validations.name_validate], verbose_name='이름')),
                ('nickname', models.CharField(default='익명', max_length=12, verbose_name='별명')),
                ('phone_number', models.CharField(max_length=11, unique=True, validators=[core.validations.phone_number_validate], verbose_name='전화번호')),
                ('photo', models.FileField(blank=True, null=True, upload_to=core.s3_options.image_path, verbose_name='사진')),
                ('is_verified', models.BooleanField(default=False, verbose_name='문자인증 유무')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='관리자 권한 유무')),
                ('is_staff', models.BooleanField(default=False, verbose_name='매니저 권한 유무')),
                ('is_active', models.BooleanField(default=True, verbose_name='계정 활성화 유무')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='마지막 로그인한 시간')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
